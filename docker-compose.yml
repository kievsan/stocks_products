version: '3.10'

volumes:
  pgdata:
  static_files:

networks:
  backend:
  frontend:

services:
  webapi:
    build: .
    ports:
      - '8000:9000'
    container_name: web
    depends_on:
      - postgres_db
    env_file:
      - docker-compose-env
    volumes:
      - static_files:/project/static
    networks:
      - backend
      - frontend
    command: >
      sh -c "python manage.py makemigrations && python manage.py migrate && gunicorn stocks_products.wsgi:application --bind 0.0.0.0:9000"
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G

  postgres_db:
    image: 'postgres:latest'
    ports:
      - '5431:5432'
    container_name: pg_db
#    env_file:
#      - docker-compose-env
    environment:
      POSTGRES_DB: 'dj_3_2_stocks_products'
      POSTGRES_USER: 'dj'
      POSTGRES_PASSWORD: '75321'
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dj -d dj_3_2_stocks_products"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 20s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 1G

  pgadmin:
    image: dpage/pgadmin4:latest
    ports:
      - "5050:80"
    container_name: pgadmin
    depends_on:
      - postgres_db
    environment:
      PGADMIN_DEFAULT_EMAIL: "aaa@yandex.ru"
      PGADMIN_DEFAULT_PASSWORD: "111"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ./services/pgadmin:/var/lib/pgadmin
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 1G

  nginx:
    image: 'nginx'
    ports:
      - '8080:9080'
    container_name: nginx
    depends_on:
      - webapi
#      - postgres_db
    volumes:
      - ./services/nginx/config:/etc/nginx/conf.d
      - static_files:/var/www/html/static
    networks:
      - frontend
